import pandas as pd
import translation
import mutation
import mutation_new
import recieve

def binary_fission(data, cur_gen):
    prev_pos = 0
    for i in range():
        data.append(data.loc[0,'DNA'])
        data.append(data.loc[0,'DNA'])
        cur_gen+=1
    while(1):
        for i in range(2**(cur_gen-1)):
            for j in range(2):
                data.append(data.loc[prev_pos,'DNA'])
                dna_str=data.loc[prev_pos,'DNA']
                dna_str=mutation_new.mutation(dna_str)
                if dna_str == descendant_dna[0]:
                    global descendant1_pos
                    descendant1_pos = i
                elif dna_str == descendant_dna[1]:
                    global descendant2_pos
                    descendant2_pos = i
                elif dna_str == descendant_dna[2]:
                    global descendant3_pos
                    descendant3_pos = i
                data = data.drop(prev_pos, axis=0)
                data.append(dna_str)
            prev_pos+=1
        prev_pos+=1
        cur_gen+=1
        if descendant1_pos and descendant2_pos and descendant3_pos:
            break
    return data

ancestor_dna = [""]
descendant_dna = ["","",""]
data = pd.DataFrame({
    'DNA': [str(ancestor_dna)],
    'Generation': 1,
    'Number': 1 
})

data = binary_fission(data, 1)
print(descendant1_pos,descendant2_pos,descendant3_pos)